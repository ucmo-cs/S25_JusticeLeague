{"ast":null,"code":"// Import necessary modules\nimport React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./styles.css\";// Import custom CSS styles\n// LoginPage handles user authentication UI and logic\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=_ref=>{let{setIsLoggedIn}=_ref;const[username,setUsername]=useState(\"\");// Track entered username\nconst[password,setPassword]=useState(\"\");// Track entered password\nconst navigate=useNavigate();// Navigation hook for redirecting\n// Handle login form submission\nconst handleLogin=()=>{console.log(\"Logging in:\",username);const loginRequest={userId:username,password:password};// Send login request to backend\nfetch(\"http://localhost:8081/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(loginRequest)}).then(response=>{if(response.ok){// If login successful, store credentials and redirect\nlocalStorage.setItem(\"isLoggedIn\",\"true\");localStorage.setItem(\"userId\",username);setIsLoggedIn(true);navigate(\"/dashboard\");}else{alert(\"Invalid login credentials.\");}}).catch(error=>console.error(\"Login error:\",error));};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"login-btn\",onClick:handleLogin,children:\"Login\"})]})});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","setIsLoggedIn","username","setUsername","password","setPassword","navigate","handleLogin","console","log","loginRequest","userId","fetch","method","headers","body","JSON","stringify","then","response","ok","localStorage","setItem","alert","catch","error","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/LoginPage.js"],"sourcesContent":["// Import necessary modules\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\"; // Import custom CSS styles\n\n// LoginPage handles user authentication UI and logic\nconst LoginPage = ({ setIsLoggedIn }) => {\n    const [username, setUsername] = useState(\"\"); // Track entered username\n    const [password, setPassword] = useState(\"\"); // Track entered password\n    const navigate = useNavigate(); // Navigation hook for redirecting\n\n    // Handle login form submission\n    const handleLogin = () => {\n        console.log(\"Logging in:\", username);\n\n        const loginRequest = {\n            userId: username,\n            password: password\n        };\n\n        // Send login request to backend\n        fetch(\"http://localhost:8081/login\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(loginRequest),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    // If login successful, store credentials and redirect\n                    localStorage.setItem(\"isLoggedIn\", \"true\");\n                    localStorage.setItem(\"userId\", username);\n                    setIsLoggedIn(true);\n                    navigate(\"/dashboard\");\n                } else {\n                    alert(\"Invalid login credentials.\");\n                }\n            })\n            .catch((error) => console.error(\"Login error:\", error));\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-box\">\n                <h2>Login</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button className=\"login-btn\" onClick={handleLogin}>Login</button>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,cAAc,CAAE;AAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA,KAAM,CAAAa,WAAW,CAAGA,CAAA,GAAM,CACtBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEP,QAAQ,CAAC,CAEpC,KAAM,CAAAQ,YAAY,CAAG,CACjBC,MAAM,CAAET,QAAQ,CAChBE,QAAQ,CAAEA,QACd,CAAC,CAED;AACAQ,KAAK,CAAC,6BAA6B,CAAE,CACjCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,YAAY,CACrC,CAAC,CAAC,CACGQ,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAIA,QAAQ,CAACC,EAAE,CAAE,CACb;AACAC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,MAAM,CAAC,CAC1CD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAEpB,QAAQ,CAAC,CACxCD,aAAa,CAAC,IAAI,CAAC,CACnBK,QAAQ,CAAC,YAAY,CAAC,CAC1B,CAAC,IAAM,CACHiB,KAAK,CAAC,4BAA4B,CAAC,CACvC,CACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAKjB,OAAO,CAACiB,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CAAC,CAC/D,CAAC,CAED,mBACI7B,IAAA,QAAK8B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5B7B,KAAA,QAAK4B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtB/B,IAAA,OAAA+B,QAAA,CAAI,OAAK,CAAI,CAAC,cACd/B,IAAA,UACIgC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAE5B,QAAS,CAChB6B,QAAQ,CAAGC,CAAC,EAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACFlC,IAAA,UACIgC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAE1B,QAAS,CAChB2B,QAAQ,CAAGC,CAAC,EAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACFlC,IAAA,WAAQ8B,SAAS,CAAC,WAAW,CAACQ,OAAO,CAAE3B,WAAY,CAAAoB,QAAA,CAAC,OAAK,CAAQ,CAAC,EACjE,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAA5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}