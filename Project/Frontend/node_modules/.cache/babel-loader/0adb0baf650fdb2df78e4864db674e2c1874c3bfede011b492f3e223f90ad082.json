{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bradl\\\\Downloads\\\\SE-Project-main\\\\SE-Project-main\\\\Project\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport LoginPage from \"./LoginPage\";\nimport \"./styles.css\"; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const userStatus = localStorage.getItem(\"isLoggedIn\");\n    setIsLoggedIn(userStatus === \"true\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/Headerlogo.png\",\n            alt: \"Commerce Bank Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 93\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n// useEffect(()=>{\n\n// fetch(\"http://localhost:8081/urls\", {method:\"GET\"})\n// .then(res =>res.json())\n// .then(res=>){\n//   setURL(res)});\n\n// },[])\n\n// {urls.map(url =>\n//  <tr key = {url.url_id}>\n//   <td>{url.url_id}</td>\n//   <td>{url.name}</td>\n//   <td>{url.url}</td>\n//  </tr>\n\n// )}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","Dashboard","LoginPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userStatus","localStorage","getItem","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport LoginPage from \"./LoginPage\";\nimport \"./styles.css\"; // Import CSS\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const userStatus = localStorage.getItem(\"isLoggedIn\");\n        setIsLoggedIn(userStatus === \"true\");\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container\">\n                <header className=\"header\">\n                    <div className=\"header-content\">\n                        <img src=\"/images/Headerlogo.png\" alt=\"Commerce Bank Logo\" className=\"logo\" />\n                    </div>\n                </header>\n\n                {/* Add a check to show the correct route based on login status */}\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={<LoginPage setIsLoggedIn={setIsLoggedIn} />}\n                    />\n                    <Route\n                        path=\"/dashboard\"\n                        element={isLoggedIn ? <Dashboard setIsLoggedIn={setIsLoggedIn} /> : <LoginPage setIsLoggedIn={setIsLoggedIn} />}\n                    />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\n// useEffect(()=>{\n\n\n// fetch(\"http://localhost:8081/urls\", {method:\"GET\"})\n// .then(res =>res.json())\n// .then(res=>){\n//   setURL(res)});\n\n// },[])\n\n// {urls.map(url =>\n//  <tr key = {url.url_id}>\n//   <td>{url.url_id}</td>\n//   <td>{url.name}</td>\n//   <td>{url.url}</td>\n//  </tr>\n\n// )}\n\n\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrDH,aAAa,CAACC,UAAU,KAAK,MAAM,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACP,MAAM;IAAAe,QAAA,eACHR,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBR,OAAA;QAAQS,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACtBR,OAAA;UAAKS,SAAS,EAAC,gBAAgB;UAAAD,QAAA,eAC3BR,OAAA;YAAKU,GAAG,EAAC,wBAAwB;YAACC,GAAG,EAAC,oBAAoB;YAACF,SAAS,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGTf,OAAA,CAACN,MAAM;QAAAc,QAAA,gBACHR,OAAA,CAACL,KAAK;UACFqB,IAAI,EAAC,GAAG;UACRC,OAAO,eAAEjB,OAAA,CAACF,SAAS;YAACM,aAAa,EAAEA;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eACFf,OAAA,CAACL,KAAK;UACFqB,IAAI,EAAC,YAAY;UACjBC,OAAO,EAAEd,UAAU,gBAAGH,OAAA,CAACH,SAAS;YAACO,aAAa,EAAEA;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGf,OAAA,CAACF,SAAS;YAACM,aAAa,EAAEA;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;;AAED;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAb,EAAA,CAlDMD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAsDT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}