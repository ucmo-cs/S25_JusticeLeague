{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaell\\\\OneDrive\\\\Desktop\\\\Project\\\\Project\\\\Frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [savedUrls, setSavedUrls] = useState([]);\n  const [newUrl, setNewUrl] = useState(\"\");\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    fetch(`http://localhost:8081/url/${userId}`).then(response => response.json()).then(data => {\n      console.log(\"Fetched URLs:\", data);\n      setSavedUrls(data);\n    }).catch(error => console.error(\"Error fetching URLs:\", error));\n  }, []);\n  const handleLogout = () => {\n    localStorage.setItem(\"isLoggedIn\", \"false\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n  const handleCheckboxChange = id => {\n    setSavedUrls(prevUrls => prevUrls.map(url => url.url_id === id ? {\n      ...url,\n      selected: !url.selected\n    } : url));\n  };\n  const handleDelete = () => {\n    const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id);\n    if (selectedIds.length === 0) {\n      alert(\"Please select at least one URL to delete.\");\n      return;\n    }\n\n    // Send DELETE request to the backend\n    fetch(\"http://localhost:8081/url\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedIds) // Send array of selected IDs\n    }).then(response => response.json()) // Assuming backend sends the updated URLs list\n    .then(updatedUrls => {\n      // Update the savedUrls state by removing the URLs that were deleted\n      setSavedUrls(updatedUrls); // Replace the state with the updated URLs\n      alert(\"Selected URLs deleted.\");\n    }).catch(error => {\n      console.error(\"Error deleting URLs:\", error);\n    });\n  };\n  const handleAddUrl = () => {\n    if (newUrl.trim() === \"\") return;\n    const userId = localStorage.getItem(\"userId\");\n    const urlRequest = {\n      url: newUrl,\n      userId: userId\n    };\n    fetch(\"http://localhost:8081/url\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(urlRequest)\n    }).then(res => res.json()).then(newSavedUrl => {\n      setSavedUrls(prevUrls => [...prevUrls, newSavedUrl]); // Add to state\n      setNewUrl(\"\"); // Clear input\n    }).catch(error => {\n      console.error(\"Failed to add URL:\", error);\n    });\n  };\n  const handleEditSelected = () => {\n    const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n      const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText; // Get updated text from the contenteditable element\n      return {\n        ...url,\n        url: updatedUrl // Set the updated URL\n      };\n    });\n    if (updatedUrls.length === 0) {\n      alert(\"Please select at least one URL to edit.\");\n      return;\n    }\n\n    // Send the updated URLs to the backend for saving\n    fetch(\"http://localhost:8081/urls\", {\n      // Ensure this endpoint is correct for updating URLs\n      method: \"PUT\",\n      // PUT for updating\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedUrls) // Send the updated URLs\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"Updated URLs:\", responseData); // Log to check the response\n\n      // Update the local state with the new data from the backend\n      setSavedUrls(prevUrls => prevUrls.map(url => {\n        const updatedUrl = responseData.find(u => u.url_id === url.url_id);\n        return updatedUrl ? updatedUrl : url;\n      }));\n    }).catch(error => {\n      console.error(\"Error updating URLs:\", error);\n    });\n  };\n  const handleRescan = () => {\n    const selectedUrls = savedUrls.filter(url => url.selected);\n    if (selectedUrls.length === 0) {\n      alert(\"Please select at least one URL to rescan.\");\n      return;\n    }\n\n    // Collect selected URL IDs (ensure they are Long/Number)\n    const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n    // Send the selected URLs to the backend for rescanning\n    fetch(\"http://localhost:8081/rescan\", {\n      // Correct endpoint\n      method: \"PUT\",\n      // PUT for rescanning\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedUrlIds) // Send the array directly\n    }).then(response => response.json()).then(updatedUrls => {\n      console.log(\"Updated URLs:\", updatedUrls); // Log to inspect the response structure\n\n      // Ensure updatedUrls is an array before trying to use .find()\n      if (Array.isArray(updatedUrls)) {\n        setSavedUrls(prevUrls => prevUrls.map(url => {\n          const updatedUrl = updatedUrls.find(u => u.url_id === url.url_id);\n          return updatedUrl ? updatedUrl : url;\n        }));\n      } else {\n        console.error(\"Unexpected response format:\", updatedUrls);\n      }\n    }).catch(error => console.error(\"Error rescanning URL:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/Headerlogo.png\",\n        alt: \"Commerce Bank Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Commerce Bank: URL Checking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Saved URLs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a new URL\",\n      value: newUrl,\n      onChange: e => setNewUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleAddUrl,\n      children: \"Add URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: handleEditSelected,\n      children: \"Edit Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleRescan,\n      children: \"Rescan Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-btn\",\n      onClick: handleDelete,\n      style: {\n        backgroundColor: \"#f44739\",\n        color: \"white\",\n        marginLeft: \"10px\"\n      },\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Certificates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Headers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Protocol/Cipher Used\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: savedUrls.map(savedUrl => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: savedUrl.selected || false // Ensure `selected` property is used to check if it's selected\n              ,\n              onChange: () => handleCheckboxChange(savedUrl.url_id) // Use `url_id` to uniquely identify the URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            id: `url-${savedUrl.url_id}` // Unique id for each URL cell\n            ,\n            \"data-full-text\": savedUrl.url,\n            contentEditable: true,\n            children: savedUrl.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.ssl || \"N/A\",\n            children: savedUrl.ssl || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resCode || \"N/A\",\n            children: savedUrl.resCode || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resHead || \"N/A\",\n            children: savedUrl.resHead || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.sslPro || \"N/A\",\n            children: savedUrl.sslPro || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)]\n        }, savedUrl.url_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"XGbZ4FGCL6gRNiqH/3od72XEIaA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Dashboard","setIsLoggedIn","_s","navigate","savedUrls","setSavedUrls","newUrl","setNewUrl","userId","localStorage","getItem","fetch","then","response","json","data","console","log","catch","error","handleLogout","setItem","handleCheckboxChange","id","prevUrls","map","url","url_id","selected","handleDelete","selectedIds","filter","length","alert","method","headers","body","JSON","stringify","updatedUrls","handleAddUrl","trim","urlRequest","res","newSavedUrl","handleEditSelected","updatedUrl","document","getElementById","innerText","responseData","find","u","handleRescan","selectedUrls","selectedUrlIds","Array","isArray","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","backgroundColor","color","marginLeft","savedUrl","checked","contentEditable","ssl","resCode","resHead","sslPro","_c","$RefreshReg$"],"sources":["C:/Users/Gaell/OneDrive/Desktop/Project/Project/Frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst Dashboard = ({ setIsLoggedIn }) => {\n    const navigate = useNavigate();\n    const [savedUrls, setSavedUrls] = useState([]);\n    const [newUrl, setNewUrl] = useState(\"\");\n\n    useEffect(() => {\n        const userId = localStorage.getItem(\"userId\");\n        fetch(`http://localhost:8081/url/${userId}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Fetched URLs:\", data);\n                setSavedUrls(data);\n            })\n            .catch((error) => console.error(\"Error fetching URLs:\", error));\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        setIsLoggedIn(false);\n        navigate(\"/login\");\n    };\n\n    const handleCheckboxChange = (id) => {\n        setSavedUrls((prevUrls) =>\n            prevUrls.map((url) =>\n                url.url_id === id ? { ...url, selected: !url.selected } : url\n            )\n        );\n    };\n\n    const handleDelete = () => {\n        const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id);\n\n        if (selectedIds.length === 0) {\n            alert(\"Please select at least one URL to delete.\");\n            return;\n        }\n\n        // Send DELETE request to the backend\n        fetch(\"http://localhost:8081/url\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedIds), // Send array of selected IDs\n        })\n            .then((response) => response.json())  // Assuming backend sends the updated URLs list\n            .then((updatedUrls) => {\n                // Update the savedUrls state by removing the URLs that were deleted\n                setSavedUrls(updatedUrls);  // Replace the state with the updated URLs\n                alert(\"Selected URLs deleted.\");\n            })\n            .catch((error) => {\n                console.error(\"Error deleting URLs:\", error);\n            });\n    };\n\n    const handleAddUrl = () => {\n        if (newUrl.trim() === \"\") return;\n\n        const userId = localStorage.getItem(\"userId\");\n\n        const urlRequest = {\n            url: newUrl,\n            userId: userId,\n        };\n\n        fetch(\"http://localhost:8081/url\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(urlRequest),\n        })\n            .then((res) => res.json())\n            .then((newSavedUrl) => {\n                setSavedUrls((prevUrls) => [...prevUrls, newSavedUrl]); // Add to state\n                setNewUrl(\"\"); // Clear input\n            })\n            .catch((error) => {\n                console.error(\"Failed to add URL:\", error);\n            });\n    };\n    const handleEditSelected = () => {\n        const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n            const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText;  // Get updated text from the contenteditable element\n            return {\n                ...url,\n                url: updatedUrl,  // Set the updated URL\n            };\n        });\n\n        if (updatedUrls.length === 0) {\n            alert(\"Please select at least one URL to edit.\");\n            return;\n        }\n\n        // Send the updated URLs to the backend for saving\n        fetch(\"http://localhost:8081/urls\", {  // Ensure this endpoint is correct for updating URLs\n            method: \"PUT\",  // PUT for updating\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updatedUrls),  // Send the updated URLs\n        })\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(\"Updated URLs:\", responseData);  // Log to check the response\n\n                // Update the local state with the new data from the backend\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((url) => {\n                        const updatedUrl = responseData.find((u) => u.url_id === url.url_id);\n                        return updatedUrl ? updatedUrl : url;\n                    })\n                );\n            })\n            .catch((error) => {\n                console.error(\"Error updating URLs:\", error);\n            });\n    };\n    const handleRescan = () => {\n        const selectedUrls = savedUrls.filter(url => url.selected);\n\n        if (selectedUrls.length === 0) {\n            alert(\"Please select at least one URL to rescan.\");\n            return;\n        }\n\n        // Collect selected URL IDs (ensure they are Long/Number)\n        const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n        // Send the selected URLs to the backend for rescanning\n        fetch(\"http://localhost:8081/rescan\", {  // Correct endpoint\n            method: \"PUT\",  // PUT for rescanning\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedUrlIds),  // Send the array directly\n        })\n            .then((response) => response.json())\n            .then((updatedUrls) => {\n                console.log(\"Updated URLs:\", updatedUrls);  // Log to inspect the response structure\n\n                // Ensure updatedUrls is an array before trying to use .find()\n                if (Array.isArray(updatedUrls)) {\n                    setSavedUrls((prevUrls) =>\n                        prevUrls.map((url) => {\n                            const updatedUrl = updatedUrls.find((u) => u.url_id === url.url_id);\n                            return updatedUrl ? updatedUrl : url;\n                        })\n                    );\n                } else {\n                    console.error(\"Unexpected response format:\", updatedUrls);\n                }\n            })\n            .catch((error) => console.error(\"Error rescanning URL:\", error));\n    };\n\n\n\n    return (\n        <div className=\"dashboard\">\n            <header className=\"header\">\n                <img src=\"/images/Headerlogo.png\" alt=\"Commerce Bank Logo\" className=\"logo\" />\n                <h1>Commerce Bank: URL Checking System</h1>\n            </header>\n\n            \n            <h2>Your Saved URLs</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter a new URL\"\n                value={newUrl}\n                onChange={(e) => setNewUrl(e.target.value)}\n            />\n            <button className=\"rescan-btn\" onClick={handleAddUrl}>Add URL</button>\n            <button className=\"edit-btn\" onClick={handleEditSelected}>Edit Selected</button>\n            <button className=\"rescan-btn\" onClick={handleRescan}>Rescan Selected</button>\n            <button className=\"delete-btn\" onClick={handleDelete} style={{ backgroundColor: \"#f44739\", color: \"white\", marginLeft: \"10px\" }}>\n                Delete Selected\n            </button>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Select</th>\n                        <th>URL</th>\n                        <th>SSL Certificates</th>\n                        <th>Response Code</th>\n                        <th>Response Headers</th>\n                        <th>SSL Protocol/Cipher Used</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {savedUrls.map((savedUrl) => (\n                        <tr key={savedUrl.url_id}>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={savedUrl.selected || false} // Ensure `selected` property is used to check if it's selected\n                                    onChange={() => handleCheckboxChange(savedUrl.url_id)} // Use `url_id` to uniquely identify the URL\n                                />\n                            </td>\n                            <td className=\"table-cell\"\n                                id={`url-${savedUrl.url_id}`}  // Unique id for each URL cell\n                                data-full-text={savedUrl.url}\n                                contentEditable>\n                                {savedUrl.url}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.ssl || \"N/A\"}>\n                                {savedUrl.ssl || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resCode || \"N/A\"}>\n                                {savedUrl.resCode || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resHead || \"N/A\"}>\n                                {savedUrl.resHead || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.sslPro || \"N/A\"}>\n                                {savedUrl.sslPro || \"N/A\"}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}