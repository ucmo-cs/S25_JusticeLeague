{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bradl\\\\Downloads\\\\SE-Project-main\\\\SE-Project-main\\\\Project\\\\Frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [savedUrls, setSavedUrls] = useState([]);\n  const [newUrl, setNewUrl] = useState(\"\");\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    fetch(`http://localhost:8081/url/${userId}`).then(response => response.json()).then(data => {\n      console.log(\"Fetched URLs:\", data); // Log the fetched URLs\n      setSavedUrls(data);\n    }).catch(error => console.error(\"Error fetching URLs:\", error));\n  }, []);\n  const handleLogout = () => {\n    localStorage.setItem(\"isLoggedIn\", \"false\");\n    setIsLoggedIn(false);\n    navigate(\"/login\"); // Redirect to login page\n  };\n  const handleCheckboxChange = id => {\n    setSavedUrls(prevUrls => prevUrls.map(url => url.url_id === id ? {\n      ...url,\n      selected: !url.selected\n    } : url // Use `url.url_id` for matching\n    ));\n  };\n  const handleDelete = () => {\n    const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id); // Use `url_id`\n\n    // Optional: Send delete requests to the backend if you have a DELETE endpoint\n    setSavedUrls(prevUrls => prevUrls.filter(url => !url.selected));\n\n    // Send a request to delete the selected URLs if needed\n    fetch(\"http://localhost:8081/url/delete\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ids: selectedIds\n      })\n    }).then(response => response.json()).then(() => {\n      console.log(\"URLs deleted\");\n    }).catch(error => {\n      console.error(\"Failed to delete URLs:\", error);\n    });\n  };\n  const handleAddUrl = () => {\n    if (newUrl.trim() === \"\") return;\n    const userId = localStorage.getItem(\"userId\");\n    const urlRequest = {\n      url: newUrl,\n      userId: userId\n    };\n    fetch(\"http://localhost:8081/url\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(urlRequest)\n    }).then(res => res.json()).then(newSavedUrl => {\n      setSavedUrls(prevUrls => [...prevUrls, newSavedUrl]); // Add to state\n      setNewUrl(\"\"); // Clear input\n    }).catch(error => {\n      console.error(\"Failed to add URL:\", error);\n    });\n  };\n  const handleEditUrl = () => {\n    const selectedUrls = savedUrls.filter(url => url.selected);\n    if (selectedUrls.length === 0) {\n      alert(\"Please select a URL to edit.\");\n      return;\n    }\n\n    // Loop through each selected URL and send a PUT request for each\n    selectedUrls.forEach(url => {\n      const updatedUrl = {\n        ...url,\n        url: url.url\n      }; // Create an updated URL object\n      fetch(`http://localhost:8081/url/${url.url_id}`, {\n        // Use `url.url_id` to uniquely identify the URL\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedUrl) // Send the updated URL data\n      }).then(response => response.json()).then(data => {\n        setSavedUrls(prevUrls => prevUrls.map(item => item.url_id === data.url_id ? data : item));\n      }).catch(error => console.error(\"Error updating URL:\", error));\n    });\n  };\n  const handleRescan = () => {\n    const selectedUrls = savedUrls.filter(url => url.selected);\n    if (selectedUrls.length === 0) {\n      alert(\"Please select at least one URL to rescan.\");\n      return;\n    }\n\n    // Collect selected URL IDs\n    const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n    // Send the selected URLs to the backend for rescanning\n    fetch(\"http://localhost:8081/url/rescan\", {\n      method: \"PUT\",\n      // PUT for rescanning\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedUrlIds) // Send the list of URL IDs to be rescanned\n    }).then(response => response.json()).then(updatedUrls => {\n      setSavedUrls(prevUrls => prevUrls.map(url => {\n        const updatedUrl = updatedUrls.find(u => u.url_id === url.url_id);\n        return updatedUrl ? updatedUrl : url;\n      }));\n    }).catch(error => console.error(\"Error rescanning URL:\", error));\n  };\n  const analyzeUrlAndUpdateState = url => {\n    fetch(`http://localhost:8081/url/rescan`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(url)\n    }).then(response => response.json()).then(updatedUrl => {\n      setSavedUrls(prevUrls => prevUrls.map(item => item.url_id === updatedUrl.url_id ? updatedUrl : item));\n    }).catch(error => console.error(\"Error analyzing URL:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/Headerlogo.png\",\n        alt: \"Commerce Bank Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Commerce Bank: URL Checking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Saved URLs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a new URL\",\n      value: newUrl,\n      onChange: e => setNewUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleAddUrl,\n      children: \"Add URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: handleEditUrl,\n      children: \"Edit Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleRescan,\n      children: \"Rescan Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-btn\",\n      onClick: handleDelete,\n      style: {\n        backgroundColor: \"red\",\n        color: \"white\",\n        marginLeft: \"10px\"\n      },\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Certificates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Headers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Protocol/Cipher Used\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: savedUrls.map(savedUrl => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: savedUrl.selected || false // Ensure `selected` property is used to check if it's selected\n              ,\n              onChange: () => handleCheckboxChange(savedUrl.url_id) // Use `url_id` to uniquely identify the URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.url,\n            contentEditable: true,\n            children: savedUrl.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.ssl || \"N/A\",\n            children: savedUrl.ssl || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resCode || \"N/A\",\n            children: savedUrl.resCode || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resHead || \"N/A\",\n            children: savedUrl.resHead || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.sslPro || \"N/A\",\n            children: savedUrl.sslPro || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, savedUrl.url_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"XGbZ4FGCL6gRNiqH/3od72XEIaA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Dashboard","setIsLoggedIn","_s","navigate","savedUrls","setSavedUrls","newUrl","setNewUrl","userId","localStorage","getItem","fetch","then","response","json","data","console","log","catch","error","handleLogout","setItem","handleCheckboxChange","id","prevUrls","map","url","url_id","selected","handleDelete","selectedIds","filter","method","headers","body","JSON","stringify","ids","handleAddUrl","trim","urlRequest","res","newSavedUrl","handleEditUrl","selectedUrls","length","alert","forEach","updatedUrl","item","handleRescan","selectedUrlIds","updatedUrls","find","u","analyzeUrlAndUpdateState","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","style","backgroundColor","color","marginLeft","savedUrl","checked","contentEditable","ssl","resCode","resHead","sslPro","_c","$RefreshReg$"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst Dashboard = ({ setIsLoggedIn }) => {\n    const navigate = useNavigate();\n    const [savedUrls, setSavedUrls] = useState([]);\n    const [newUrl, setNewUrl] = useState(\"\");\n\n    useEffect(() => {\n        const userId = localStorage.getItem(\"userId\");\n        fetch(`http://localhost:8081/url/${userId}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Fetched URLs:\", data); // Log the fetched URLs\n                setSavedUrls(data);\n            })\n            .catch((error) => console.error(\"Error fetching URLs:\", error));\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        setIsLoggedIn(false);\n        navigate(\"/login\"); // Redirect to login page\n    };\n\n    const handleCheckboxChange = (id) => {\n        setSavedUrls((prevUrls) =>\n            prevUrls.map((url) =>\n                url.url_id === id ? { ...url, selected: !url.selected } : url // Use `url.url_id` for matching\n            )\n        );\n    };\n\n    const handleDelete = () => {\n        const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id); // Use `url_id`\n\n        // Optional: Send delete requests to the backend if you have a DELETE endpoint\n        setSavedUrls((prevUrls) => prevUrls.filter((url) => !url.selected));\n\n        // Send a request to delete the selected URLs if needed\n        fetch(\"http://localhost:8081/url/delete\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ ids: selectedIds }),\n        })\n            .then((response) => response.json())\n            .then(() => {\n                console.log(\"URLs deleted\");\n            })\n            .catch((error) => {\n                console.error(\"Failed to delete URLs:\", error);\n            });\n    };\n\n    const handleAddUrl = () => {\n        if (newUrl.trim() === \"\") return;\n\n        const userId = localStorage.getItem(\"userId\");\n\n        const urlRequest = {\n            url: newUrl,\n            userId: userId,\n        };\n\n        fetch(\"http://localhost:8081/url\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(urlRequest),\n        })\n            .then((res) => res.json())\n            .then((newSavedUrl) => {\n                setSavedUrls((prevUrls) => [...prevUrls, newSavedUrl]); // Add to state\n                setNewUrl(\"\"); // Clear input\n            })\n            .catch((error) => {\n                console.error(\"Failed to add URL:\", error);\n            });\n    };\n    const handleEditUrl = () => {\n        const selectedUrls = savedUrls.filter(url => url.selected);\n        if (selectedUrls.length === 0) {\n            alert(\"Please select a URL to edit.\");\n            return;\n        }\n\n        // Loop through each selected URL and send a PUT request for each\n        selectedUrls.forEach((url) => {\n            const updatedUrl = { ...url, url: url.url }; // Create an updated URL object\n            fetch(`http://localhost:8081/url/${url.url_id}`, { // Use `url.url_id` to uniquely identify the URL\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(updatedUrl), // Send the updated URL data\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    setSavedUrls((prevUrls) =>\n                        prevUrls.map((item) => (item.url_id === data.url_id ? data : item))\n                    );\n                })\n                .catch((error) => console.error(\"Error updating URL:\", error));\n        });\n    };\n    const handleRescan = () => {\n        const selectedUrls = savedUrls.filter(url => url.selected);\n\n        if (selectedUrls.length === 0) {\n            alert(\"Please select at least one URL to rescan.\");\n            return;\n        }\n\n        // Collect selected URL IDs\n        const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n        // Send the selected URLs to the backend for rescanning\n        fetch(\"http://localhost:8081/url/rescan\", {\n            method: \"PUT\",  // PUT for rescanning\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedUrlIds), // Send the list of URL IDs to be rescanned\n        })\n            .then((response) => response.json())\n            .then((updatedUrls) => {\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((url) => {\n                        const updatedUrl = updatedUrls.find((u) => u.url_id === url.url_id);\n                        return updatedUrl ? updatedUrl : url;\n                    })\n                );\n            })\n            .catch((error) => console.error(\"Error rescanning URL:\", error));\n    };\n\n    const analyzeUrlAndUpdateState = (url) => {\n        fetch(`http://localhost:8081/url/rescan`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(url),\n        })\n            .then((response) => response.json())\n            .then((updatedUrl) => {\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((item) => (item.url_id === updatedUrl.url_id ? updatedUrl : item))\n                );\n            })\n            .catch((error) => console.error(\"Error analyzing URL:\", error));\n    };\n\n    return (\n        <div className=\"dashboard\">\n            <header className=\"header\">\n                <img src=\"/images/Headerlogo.png\" alt=\"Commerce Bank Logo\" className=\"logo\" />\n                <h1>Commerce Bank: URL Checking System</h1>\n            </header>\n\n            <div className=\"logout-container\">\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n            </div>\n\n            <h2>Your Saved URLs</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter a new URL\"\n                value={newUrl}\n                onChange={(e) => setNewUrl(e.target.value)}\n            />\n            <button className=\"rescan-btn\" onClick={handleAddUrl}>Add URL</button>\n            <button className=\"edit-btn\" onClick={handleEditUrl}>Edit Selected</button>\n            <button className=\"rescan-btn\" onClick={handleRescan}>Rescan Selected</button>\n            <button className=\"delete-btn\" onClick={handleDelete} style={{ backgroundColor: \"red\", color: \"white\", marginLeft: \"10px\" }}>\n                Delete Selected\n            </button>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Select</th>\n                        <th>URL</th>\n                        <th>SSL Certificates</th>\n                        <th>Response Code</th>\n                        <th>Response Headers</th>\n                        <th>SSL Protocol/Cipher Used</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {savedUrls.map((savedUrl) => (\n                        <tr key={savedUrl.url_id}>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={savedUrl.selected || false} // Ensure `selected` property is used to check if it's selected\n                                    onChange={() => handleCheckboxChange(savedUrl.url_id)} // Use `url_id` to uniquely identify the URL\n                                />\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.url} contentEditable>\n                                {savedUrl.url}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.ssl || \"N/A\"}>\n                                {savedUrl.ssl || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resCode || \"N/A\"}>\n                                {savedUrl.resCode || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resHead || \"N/A\"}>\n                                {savedUrl.resHead || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.sslPro || \"N/A\"}>\n                                {savedUrl.sslPro || \"N/A\"}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}