{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{setIsLoggedIn}=_ref;const navigate=useNavigate();const[savedUrls,setSavedUrls]=useState([]);const[newUrl,setNewUrl]=useState(\"\");useEffect(()=>{const userId=localStorage.getItem(\"userId\");fetch(`http://localhost:8081/url/${userId}`).then(response=>response.json()).then(data=>{console.log(\"Fetched URLs:\",data);setSavedUrls(data);}).catch(error=>console.error(\"Error fetching URLs:\",error));},[]);const handleLogout=()=>{localStorage.setItem(\"isLoggedIn\",\"false\");setIsLoggedIn(false);navigate(\"/login\");};const handleCheckboxChange=id=>{setSavedUrls(prevUrls=>prevUrls.map(url=>url.url_id===id?{...url,selected:!url.selected}:url));};const handleDelete=()=>{const selectedIds=savedUrls.filter(url=>url.selected).map(url=>url.url_id);if(selectedIds.length===0){alert(\"Please select at least one URL to delete.\");return;}// Send DELETE request to the backend\nfetch(\"http://localhost:8081/url\",{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(selectedIds)// Send array of selected IDs\n}).then(response=>response.json())// Assuming backend sends the updated URLs list\n.then(updatedUrls=>{// Update the savedUrls state by removing the URLs that were deleted\nsetSavedUrls(updatedUrls);// Replace the state with the updated URLs\nalert(\"Selected URLs deleted.\");}).catch(error=>{console.error(\"Error deleting URLs:\",error);});};const handleAddUrl=()=>{if(newUrl.trim()===\"\")return;const userId=localStorage.getItem(\"userId\");const urlRequest={url:newUrl,userId:userId};fetch(\"http://localhost:8081/url\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(urlRequest)}).then(res=>res.json()).then(newSavedUrl=>{setSavedUrls(prevUrls=>[...prevUrls,newSavedUrl]);// Add to state\nsetNewUrl(\"\");// Clear input\n}).catch(error=>{console.error(\"Failed to add URL:\",error);});};const handleEditSelected=()=>{const updatedUrls=savedUrls.filter(url=>url.selected).map(url=>{const updatedUrl=document.getElementById(`url-${url.url_id}`).innerText;// Get updated text from the contenteditable element\nreturn{...url,url:updatedUrl// Set the updated URL\n};});if(updatedUrls.length===0){alert(\"Please select at least one URL to edit.\");return;}// Send the updated URLs to the backend for saving\nfetch(\"http://localhost:8081/urls\",{// Ensure this endpoint is correct for updating URLs\nmethod:\"PUT\",// PUT for updating\nheaders:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedUrls)// Send the updated URLs\n}).then(response=>response.json()).then(responseData=>{console.log(\"Updated URLs:\",responseData);// Log to check the response\n// Update the local state with the new data from the backend\nsetSavedUrls(prevUrls=>prevUrls.map(url=>{const updatedUrl=responseData.find(u=>u.url_id===url.url_id);return updatedUrl?updatedUrl:url;}));}).catch(error=>{console.error(\"Error updating URLs:\",error);});};const handleRescan=()=>{const selectedUrls=savedUrls.filter(url=>url.selected);if(selectedUrls.length===0){alert(\"Please select at least one URL to rescan.\");return;}// Collect selected URL IDs (ensure they are Long/Number)\nconst selectedUrlIds=selectedUrls.map(url=>url.url_id);// Send the selected URLs to the backend for rescanning\nfetch(\"http://localhost:8081/rescan\",{// Correct endpoint\nmethod:\"PUT\",// PUT for rescanning\nheaders:{\"Content-Type\":\"application/json\"},body:JSON.stringify(selectedUrlIds)// Send the array directly\n}).then(response=>response.json()).then(updatedUrls=>{console.log(\"Updated URLs:\",updatedUrls);// Log to inspect the response structure\n// Ensure updatedUrls is an array before trying to use .find()\nif(Array.isArray(updatedUrls)){setSavedUrls(prevUrls=>prevUrls.map(url=>{const updatedUrl=updatedUrls.find(u=>u.url_id===url.url_id);return updatedUrl?updatedUrl:url;}));}else{console.error(\"Unexpected response format:\",updatedUrls);}}).catch(error=>console.error(\"Error rescanning URL:\",error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/Headerlogo.png\",alt:\"Commerce Bank Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Commerce Bank: URL Checking System\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"logout-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"logout-btn\",onClick:handleLogout,children:\"Logout\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Your Saved URLs\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter a new URL\",value:newUrl,onChange:e=>setNewUrl(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"rescan-btn\",onClick:handleAddUrl,children:\"Add URL\"}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:handleEditSelected,children:\"Edit Selected\"}),/*#__PURE__*/_jsx(\"button\",{className:\"rescan-btn\",onClick:handleRescan,children:\"Rescan Selected\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:handleDelete,style:{backgroundColor:\"red\",color:\"white\",marginLeft:\"10px\"},children:\"Delete Selected\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Select\"}),/*#__PURE__*/_jsx(\"th\",{children:\"URL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"SSL Certificates\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Response Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"SSL Protocol/Cipher Used\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Response Headers\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:savedUrls.map(savedUrl=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:savedUrl.selected||false// Ensure `selected` property is used to check if it's selected\n,onChange:()=>handleCheckboxChange(savedUrl.url_id)// Use `url_id` to uniquely identify the URL\n})}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",id:`url-${savedUrl.url_id}`// Unique id for each URL cell\n,\"data-full-text\":savedUrl.url,contentEditable:true,children:savedUrl.url}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.ssl||\"N/A\",children:savedUrl.ssl||\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.resCode||\"N/A\",children:savedUrl.resCode||\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.resHead||\"N/A\",children:savedUrl.sslPro||\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.sslPro||\"N/A\",children:savedUrl.redHead||\"N/A\"})]},savedUrl.url_id))})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","setIsLoggedIn","navigate","savedUrls","setSavedUrls","newUrl","setNewUrl","userId","localStorage","getItem","fetch","then","response","json","data","console","log","catch","error","handleLogout","setItem","handleCheckboxChange","id","prevUrls","map","url","url_id","selected","handleDelete","selectedIds","filter","length","alert","method","headers","body","JSON","stringify","updatedUrls","handleAddUrl","trim","urlRequest","res","newSavedUrl","handleEditSelected","updatedUrl","document","getElementById","innerText","responseData","find","u","handleRescan","selectedUrls","selectedUrlIds","Array","isArray","className","children","src","alt","onClick","type","placeholder","value","onChange","e","target","style","backgroundColor","color","marginLeft","savedUrl","checked","contentEditable","ssl","resCode","resHead","sslPro","redHead"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst Dashboard = ({ setIsLoggedIn }) => {\n    const navigate = useNavigate();\n    const [savedUrls, setSavedUrls] = useState([]);\n    const [newUrl, setNewUrl] = useState(\"\");\n\n    useEffect(() => {\n        const userId = localStorage.getItem(\"userId\");\n        fetch(`http://localhost:8081/url/${userId}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Fetched URLs:\", data);\n                setSavedUrls(data);\n            })\n            .catch((error) => console.error(\"Error fetching URLs:\", error));\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        setIsLoggedIn(false);\n        navigate(\"/login\");\n    };\n\n    const handleCheckboxChange = (id) => {\n        setSavedUrls((prevUrls) =>\n            prevUrls.map((url) =>\n                url.url_id === id ? { ...url, selected: !url.selected } : url\n            )\n        );\n    };\n\n    const handleDelete = () => {\n        const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id);\n\n        if (selectedIds.length === 0) {\n            alert(\"Please select at least one URL to delete.\");\n            return;\n        }\n\n        // Send DELETE request to the backend\n        fetch(\"http://localhost:8081/url\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedIds), // Send array of selected IDs\n        })\n            .then((response) => response.json())  // Assuming backend sends the updated URLs list\n            .then((updatedUrls) => {\n                // Update the savedUrls state by removing the URLs that were deleted\n                setSavedUrls(updatedUrls);  // Replace the state with the updated URLs\n                alert(\"Selected URLs deleted.\");\n            })\n            .catch((error) => {\n                console.error(\"Error deleting URLs:\", error);\n            });\n    };\n\n    const handleAddUrl = () => {\n        if (newUrl.trim() === \"\") return;\n\n        const userId = localStorage.getItem(\"userId\");\n\n        const urlRequest = {\n            url: newUrl,\n            userId: userId,\n        };\n\n        fetch(\"http://localhost:8081/url\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(urlRequest),\n        })\n            .then((res) => res.json())\n            .then((newSavedUrl) => {\n                setSavedUrls((prevUrls) => [...prevUrls, newSavedUrl]); // Add to state\n                setNewUrl(\"\"); // Clear input\n            })\n            .catch((error) => {\n                console.error(\"Failed to add URL:\", error);\n            });\n    };\n    const handleEditSelected = () => {\n        const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n            const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText;  // Get updated text from the contenteditable element\n            return {\n                ...url,\n                url: updatedUrl,  // Set the updated URL\n            };\n        });\n\n        if (updatedUrls.length === 0) {\n            alert(\"Please select at least one URL to edit.\");\n            return;\n        }\n\n        // Send the updated URLs to the backend for saving\n        fetch(\"http://localhost:8081/urls\", {  // Ensure this endpoint is correct for updating URLs\n            method: \"PUT\",  // PUT for updating\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updatedUrls),  // Send the updated URLs\n        })\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(\"Updated URLs:\", responseData);  // Log to check the response\n\n                // Update the local state with the new data from the backend\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((url) => {\n                        const updatedUrl = responseData.find((u) => u.url_id === url.url_id);\n                        return updatedUrl ? updatedUrl : url;\n                    })\n                );\n            })\n            .catch((error) => {\n                console.error(\"Error updating URLs:\", error);\n            });\n    };\n    const handleRescan = () => {\n        const selectedUrls = savedUrls.filter(url => url.selected);\n\n        if (selectedUrls.length === 0) {\n            alert(\"Please select at least one URL to rescan.\");\n            return;\n        }\n\n        // Collect selected URL IDs (ensure they are Long/Number)\n        const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n        // Send the selected URLs to the backend for rescanning\n        fetch(\"http://localhost:8081/rescan\", {  // Correct endpoint\n            method: \"PUT\",  // PUT for rescanning\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedUrlIds),  // Send the array directly\n        })\n            .then((response) => response.json())\n            .then((updatedUrls) => {\n                console.log(\"Updated URLs:\", updatedUrls);  // Log to inspect the response structure\n\n                // Ensure updatedUrls is an array before trying to use .find()\n                if (Array.isArray(updatedUrls)) {\n                    setSavedUrls((prevUrls) =>\n                        prevUrls.map((url) => {\n                            const updatedUrl = updatedUrls.find((u) => u.url_id === url.url_id);\n                            return updatedUrl ? updatedUrl : url;\n                        })\n                    );\n                } else {\n                    console.error(\"Unexpected response format:\", updatedUrls);\n                }\n            })\n            .catch((error) => console.error(\"Error rescanning URL:\", error));\n    };\n\n\n\n    return (\n        <div className=\"dashboard\">\n            <header className=\"header\">\n                <img src=\"/images/Headerlogo.png\" alt=\"Commerce Bank Logo\" className=\"logo\" />\n                <h1>Commerce Bank: URL Checking System</h1>\n            </header>\n\n            <div className=\"logout-container\">\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n            </div>\n\n            <h2>Your Saved URLs</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter a new URL\"\n                value={newUrl}\n                onChange={(e) => setNewUrl(e.target.value)}\n            />\n            <button className=\"rescan-btn\" onClick={handleAddUrl}>Add URL</button>\n            <button className=\"edit-btn\" onClick={handleEditSelected}>Edit Selected</button>\n            <button className=\"rescan-btn\" onClick={handleRescan}>Rescan Selected</button>\n            <button className=\"delete-btn\" onClick={handleDelete} style={{ backgroundColor: \"red\", color: \"white\", marginLeft: \"10px\" }}>\n                Delete Selected\n            </button>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Select</th>\n                        <th>URL</th>\n                        <th>SSL Certificates</th>\n                        <th>Response Code</th>\n                        <th>SSL Protocol/Cipher Used</th>\n                        <th>Response Headers</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {savedUrls.map((savedUrl) => (\n                        <tr key={savedUrl.url_id}>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={savedUrl.selected || false} // Ensure `selected` property is used to check if it's selected\n                                    onChange={() => handleCheckboxChange(savedUrl.url_id)} // Use `url_id` to uniquely identify the URL\n                                />\n                            </td>\n                            <td className=\"table-cell\"\n                                id={`url-${savedUrl.url_id}`}  // Unique id for each URL cell\n                                data-full-text={savedUrl.url}\n                                contentEditable>\n                                {savedUrl.url}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.ssl || \"N/A\"}>\n                                {savedUrl.ssl || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resCode || \"N/A\"}>\n                                {savedUrl.resCode || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resHead || \"N/A\"}>\n                                {savedUrl.sslPro || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.sslPro || \"N/A\"}>\n                                {savedUrl.redHead || \"N/A\"}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}