{"ast":null,"code":"// Import necessary modules\nimport React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./styles.css\";// Import custom CSS styles\n// Dashboard component to manage URLs\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{setIsLoggedIn}=_ref;const navigate=useNavigate();const[savedUrls,setSavedUrls]=useState([]);// URLs saved for the user\nconst[newUrl,setNewUrl]=useState(\"\");// New URL input value\n// Fetch user's URLs when the component mounts\nuseEffect(()=>{const userId=localStorage.getItem(\"userId\");fetch(`http://localhost:8081/url/${userId}`).then(response=>response.json()).then(data=>{console.log(\"Fetched URLs:\",data);setSavedUrls(data);}).catch(error=>console.error(\"Error fetching URLs:\",error));},[]);// Logout handler\nconst handleLogout=()=>{localStorage.setItem(\"isLoggedIn\",\"false\");setIsLoggedIn(false);navigate(\"/login\");};// Format and display important headers\nconst formatHeadersForDisplay=headers=>{if(!headers)return\"No headers available.\";const importantKeys=[\"Server\",\"Date\",\"Content-Type\",\"Cache-Control\",\"X-Frame-Options\",\"Strict-Transport-Security\",\"Content-Security-Policy\",\"Expires\"];const headerLines=headers.split(/\\r?\\n/);// Filter only important headers\nconst importantHeaders=headerLines.map(line=>{const[key,...rest]=line.split(\": \");return{key:key.trim(),value:rest.join(\": \").trim()};}).filter(header=>importantKeys.includes(header.key));if(importantHeaders.length===0){return\"No important headers found.\";}return importantHeaders.map(header=>`<strong>${header.key}:</strong> ${header.value}`).join(\"<br/>\");};// Handle checkbox selection for each URL\nconst handleCheckboxChange=id=>{setSavedUrls(prevUrls=>prevUrls.map(url=>url.url_id===id?{...url,selected:!url.selected}:url));};// Delete selected URLs\nconst handleDelete=()=>{const selectedIds=savedUrls.filter(url=>url.selected).map(url=>url.url_id);if(selectedIds.length===0){alert(\"Please select at least one URL to delete.\");return;}const userId=localStorage.getItem(\"userId\");fetch(\"http://localhost:8081/url\",{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({urlIds:selectedIds,userId})}).then(response=>response.json()).then(updatedUrls=>{setSavedUrls(updatedUrls);// Update UI after delete\nalert(\"Selected URLs deleted.\");}).catch(error=>{console.error(\"Error deleting URLs:\",error);});};// Add a new URL\nconst handleAddUrl=()=>{if(newUrl.trim()===\"\"){alert(\"Please enter a URL.\");return;}let validUrl;try{validUrl=new URL(newUrl);}catch(_){alert(\"Invalid URL. Please retype a valid URL (example: https://example.com)\");return;}if(![\"http:\",\"https:\"].includes(validUrl.protocol)){alert(\"Only HTTP and HTTPS URLs are allowed.\");return;}const userId=localStorage.getItem(\"userId\");const urlRequest={url:validUrl.href,userId:userId};fetch(\"http://localhost:8081/url\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(urlRequest)}).then(res=>res.json()).then(newSavedUrl=>{setSavedUrls(prevUrls=>[...prevUrls,newSavedUrl]);setNewUrl(\"\");// Clear input\n}).catch(error=>{console.error(\"Failed to add URL:\",error);});};// Edit selected URLs\nconst handleEditSelected=()=>{const updatedUrls=savedUrls.filter(url=>url.selected).map(url=>{const updatedUrl=document.getElementById(`url-${url.url_id}`).innerText;return{...url,url:updatedUrl};});if(updatedUrls.length===0){alert(\"Please select at least one URL to edit.\");return;}fetch(\"http://localhost:8081/urls\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedUrls)}).then(response=>response.json()).then(responseData=>{console.log(\"Updated URLs:\",responseData);setSavedUrls(prevUrls=>prevUrls.map(url=>{const updatedUrl=responseData.find(u=>u.url_id===url.url_id);return updatedUrl?updatedUrl:url;}));}).catch(error=>{console.error(\"Error updating URLs:\",error);});};// Rescan selected URLs\nconst handleRescan=()=>{const selectedUrls=savedUrls.filter(url=>url.selected);if(selectedUrls.length===0){alert(\"Please select at least one URL to rescan.\");return;}const selectedUrlIds=selectedUrls.map(url=>url.url_id);fetch(\"http://localhost:8081/rescan\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(selectedUrlIds)}).then(response=>response.json()).then(updatedUrls=>{console.log(\"Updated URLs:\",updatedUrls);if(Array.isArray(updatedUrls)){setSavedUrls(prevUrls=>prevUrls.map(url=>{const updatedUrl=updatedUrls.find(u=>u.url_id===url.url_id);return updatedUrl?updatedUrl:url;}));}else{console.error(\"Unexpected response format:\",updatedUrls);}}).catch(error=>console.error(\"Error rescanning URL:\",error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/UrlCheckingSystem.png\",alt:\"URL Checking System\",className:\"url-analyzer-logo\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"saved-urls-title\",children:\"Your Saved URLs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"url-actions-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"url-actions\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter a new URL\",value:newUrl,onChange:e=>setNewUrl(e.target.value),className:\"url-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"rescan-btn\",onClick:handleAddUrl,children:\"Add URL\"}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:handleEditSelected,children:\"Edit Selected\"}),/*#__PURE__*/_jsx(\"button\",{className:\"rescan-btn\",onClick:handleRescan,children:\"Rescan Selected\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:handleDelete,style:{backgroundColor:\"#f44739\",color:\"white\"},children:\"Delete Selected\"})]})}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Select\"}),/*#__PURE__*/_jsx(\"th\",{children:\"URL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"SSL Certificates\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Response Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Response Headers\"}),/*#__PURE__*/_jsx(\"th\",{children:\"SSL Protocol/Cipher Used\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:savedUrls.map(savedUrl=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:savedUrl.selected||false,onChange:()=>handleCheckboxChange(savedUrl.url_id)})}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",id:`url-${savedUrl.url_id}`,contentEditable:true,children:savedUrl.url}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.ssl||\"N/A\",children:savedUrl.ssl||\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.resCode||\"N/A\",children:savedUrl.resCode||\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell expandable\",dangerouslySetInnerHTML:{__html:formatHeadersForDisplay(savedUrl.resHead)}}),/*#__PURE__*/_jsx(\"td\",{className:\"table-cell\",\"data-full-text\":savedUrl.sslPro||\"N/A\",children:savedUrl.sslPro||\"N/A\"})]},savedUrl.url_id))})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","setIsLoggedIn","navigate","savedUrls","setSavedUrls","newUrl","setNewUrl","userId","localStorage","getItem","fetch","then","response","json","data","console","log","catch","error","handleLogout","setItem","formatHeadersForDisplay","headers","importantKeys","headerLines","split","importantHeaders","map","line","key","rest","trim","value","join","filter","header","includes","length","handleCheckboxChange","id","prevUrls","url","url_id","selected","handleDelete","selectedIds","alert","method","body","JSON","stringify","urlIds","updatedUrls","handleAddUrl","validUrl","URL","_","protocol","urlRequest","href","res","newSavedUrl","handleEditSelected","updatedUrl","document","getElementById","innerText","responseData","find","u","handleRescan","selectedUrls","selectedUrlIds","Array","isArray","className","children","src","alt","type","placeholder","onChange","e","target","onClick","style","backgroundColor","color","savedUrl","checked","contentEditable","ssl","resCode","dangerouslySetInnerHTML","__html","resHead","sslPro"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/Dashboard.js"],"sourcesContent":["// Import necessary modules\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\"; // Import custom CSS styles\n\n// Dashboard component to manage URLs\nconst Dashboard = ({ setIsLoggedIn }) => {\n  const navigate = useNavigate();\n  const [savedUrls, setSavedUrls] = useState([]); // URLs saved for the user\n  const [newUrl, setNewUrl] = useState(\"\"); // New URL input value\n\n  // Fetch user's URLs when the component mounts\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    fetch(`http://localhost:8081/url/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Fetched URLs:\", data);\n        setSavedUrls(data);\n      })\n      .catch((error) => console.error(\"Error fetching URLs:\", error));\n  }, []);\n\n  // Logout handler\n  const handleLogout = () => {\n    localStorage.setItem(\"isLoggedIn\", \"false\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n\n  // Format and display important headers\n  const formatHeadersForDisplay = (headers) => {\n    if (!headers) return \"No headers available.\";\n  \n    const importantKeys = [\n      \"Server\",\n      \"Date\",\n      \"Content-Type\",\n      \"Cache-Control\",\n      \"X-Frame-Options\",\n      \"Strict-Transport-Security\",\n      \"Content-Security-Policy\",\n      \"Expires\"\n    ];\n  \n    const headerLines = headers.split(/\\r?\\n/);\n\n    // Filter only important headers\n    const importantHeaders = headerLines\n      .map(line => {\n        const [key, ...rest] = line.split(\": \");\n        return { key: key.trim(), value: rest.join(\": \").trim() };\n      })\n      .filter(header => importantKeys.includes(header.key));\n  \n    if (importantHeaders.length === 0) {\n      return \"No important headers found.\";\n    }\n  \n    return importantHeaders\n      .map(header => `<strong>${header.key}:</strong> ${header.value}`)\n      .join(\"<br/>\");\n  };\n\n  // Handle checkbox selection for each URL\n  const handleCheckboxChange = (id) => {\n    setSavedUrls((prevUrls) =>\n      prevUrls.map((url) =>\n        url.url_id === id ? { ...url, selected: !url.selected } : url\n      )\n    );\n  };\n\n  // Delete selected URLs\n  const handleDelete = () => {\n    const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id);\n\n    if (selectedIds.length === 0) {\n        alert(\"Please select at least one URL to delete.\");\n        return;\n    }\n\n    const userId = localStorage.getItem(\"userId\");\n\n    fetch(\"http://localhost:8081/url\", {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ urlIds: selectedIds, userId }), \n    })\n    .then((response) => response.json())\n    .then((updatedUrls) => {\n        setSavedUrls(updatedUrls); // Update UI after delete\n        alert(\"Selected URLs deleted.\");\n    })\n    .catch((error) => {\n        console.error(\"Error deleting URLs:\", error);\n    });\n  }; \n\n  // Add a new URL\n  const handleAddUrl = () => {\n    if (newUrl.trim() === \"\") {\n      alert(\"Please enter a URL.\");\n      return;\n    }\n  \n    let validUrl;\n    try {\n      validUrl = new URL(newUrl);\n    } catch (_) {\n      alert(\"Invalid URL. Please retype a valid URL (example: https://example.com)\");\n      return;\n    }\n  \n    if (![\"http:\", \"https:\"].includes(validUrl.protocol)) {\n      alert(\"Only HTTP and HTTPS URLs are allowed.\");\n      return;\n    }\n  \n    const userId = localStorage.getItem(\"userId\");\n  \n    const urlRequest = {\n      url: validUrl.href,  \n      userId: userId,\n    };\n  \n    fetch(\"http://localhost:8081/url\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(urlRequest),\n    })\n    .then((res) => res.json())\n    .then((newSavedUrl) => {\n      setSavedUrls((prevUrls) => [...prevUrls, newSavedUrl]);\n      setNewUrl(\"\"); // Clear input\n    })\n    .catch((error) => {\n      console.error(\"Failed to add URL:\", error);\n    });\n  };\n\n  // Edit selected URLs\n  const handleEditSelected = () => {\n    const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n      const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText;\n      return {\n        ...url,\n        url: updatedUrl,\n      };\n    });\n\n    if (updatedUrls.length === 0) {\n      alert(\"Please select at least one URL to edit.\");\n      return;\n    }\n\n    fetch(\"http://localhost:8081/urls\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updatedUrls),\n    })\n    .then((response) => response.json())\n    .then((responseData) => {\n      console.log(\"Updated URLs:\", responseData);\n      setSavedUrls((prevUrls) =>\n        prevUrls.map((url) => {\n          const updatedUrl = responseData.find((u) => u.url_id === url.url_id);\n          return updatedUrl ? updatedUrl : url;\n        })\n      );\n    })\n    .catch((error) => {\n      console.error(\"Error updating URLs:\", error);\n    });\n  };\n\n  // Rescan selected URLs\n  const handleRescan = () => {\n    const selectedUrls = savedUrls.filter(url => url.selected);\n\n    if (selectedUrls.length === 0) {\n      alert(\"Please select at least one URL to rescan.\");\n      return;\n    }\n\n    const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n    fetch(\"http://localhost:8081/rescan\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(selectedUrlIds),\n    })\n    .then((response) => response.json())\n    .then((updatedUrls) => {\n      console.log(\"Updated URLs:\", updatedUrls);\n      if (Array.isArray(updatedUrls)) {\n        setSavedUrls((prevUrls) =>\n          prevUrls.map((url) => {\n            const updatedUrl = updatedUrls.find((u) => u.url_id === url.url_id);\n            return updatedUrl ? updatedUrl : url;\n          })\n        );\n      } else {\n        console.error(\"Unexpected response format:\", updatedUrls);\n      }\n    })\n    .catch((error) => console.error(\"Error rescanning URL:\", error));\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"header\">\n        {/* URL Analyzer Logo */}\n        <img src=\"/images/UrlCheckingSystem.png\" alt=\"URL Checking System\" className=\"url-analyzer-logo\" />\n      </header>\n\n      {/* Page Title */}\n      <h2 className=\"saved-urls-title\">Your Saved URLs</h2>\n\n      {/* Action Buttons and Input Field */}\n      <div className=\"url-actions-container\">\n        <div className=\"url-actions\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a new URL\"\n            value={newUrl}\n            onChange={(e) => setNewUrl(e.target.value)}\n            className=\"url-input\"\n          />\n          <button className=\"rescan-btn\" onClick={handleAddUrl}>Add URL</button>\n          <button className=\"edit-btn\" onClick={handleEditSelected}>Edit Selected</button>\n          <button className=\"rescan-btn\" onClick={handleRescan}>Rescan Selected</button>\n          <button className=\"delete-btn\" onClick={handleDelete} style={{ backgroundColor: \"#f44739\", color: \"white\" }}>\n            Delete Selected\n          </button>\n        </div>\n      </div>\n\n      {/* URL Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th>URL</th>\n            <th>SSL Certificates</th>\n            <th>Response Code</th>\n            <th>Response Headers</th>\n            <th>SSL Protocol/Cipher Used</th>\n          </tr>\n        </thead>\n        <tbody>\n          {savedUrls.map((savedUrl) => (\n            <tr key={savedUrl.url_id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={savedUrl.selected || false}\n                  onChange={() => handleCheckboxChange(savedUrl.url_id)}\n                />\n              </td>\n              <td className=\"table-cell\" id={`url-${savedUrl.url_id}`} contentEditable>\n                {savedUrl.url}\n              </td>\n              <td className=\"table-cell\" data-full-text={savedUrl.ssl || \"N/A\"}>\n                {savedUrl.ssl || \"N/A\"}\n              </td>\n              <td className=\"table-cell\" data-full-text={savedUrl.resCode || \"N/A\"}>\n                {savedUrl.resCode || \"N/A\"}\n              </td>\n              <td className=\"table-cell expandable\" dangerouslySetInnerHTML={{ __html: formatHeadersForDisplay(savedUrl.resHead) }}>\n              </td>\n              <td className=\"table-cell\" data-full-text={savedUrl.sslPro || \"N/A\"}>\n                {savedUrl.sslPro || \"N/A\"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}