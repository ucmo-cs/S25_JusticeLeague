{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bradl\\\\Downloads\\\\SE-Project-main\\\\SE-Project-main\\\\Project\\\\Frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [savedUrls, setSavedUrls] = useState([]);\n  const [newUrl, setNewUrl] = useState(\"\");\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    fetch(`http://localhost:8081/url/${userId}`).then(response => response.json()).then(data => {\n      console.log(\"Fetched URLs:\", data); // Log the fetched URLs\n      setSavedUrls(data);\n    }).catch(error => console.error(\"Error fetching URLs:\", error));\n  }, []);\n  const handleLogout = () => {\n    localStorage.setItem(\"isLoggedIn\", \"false\");\n    setIsLoggedIn(false);\n    navigate(\"/login\"); // Redirect to login page\n  };\n  const handleCheckboxChange = id => {\n    setSavedUrls(prevUrls => prevUrls.map(url => url.url_id === id ? {\n      ...url,\n      selected: !url.selected\n    } : url // Use `url.url_id` for matching\n    ));\n  };\n  const handleDelete = () => {\n    const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id); // Use `url_id`\n\n    // Optional: Send delete requests to the backend if you have a DELETE endpoint\n    setSavedUrls(prevUrls => prevUrls.filter(url => !url.selected));\n\n    // Send a request to delete the selected URLs if needed\n    fetch(\"http://localhost:8081/url/delete\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ids: selectedIds\n      })\n    }).then(response => response.json()).then(() => {\n      console.log(\"URLs deleted\");\n    }).catch(error => {\n      console.error(\"Failed to delete URLs:\", error);\n    });\n  };\n  const handleAddUrl = () => {\n    if (newUrl.trim() === \"\") return;\n    const userId = localStorage.getItem(\"userId\");\n    const urlRequest = {\n      url: newUrl,\n      userId: userId\n    };\n    fetch(\"http://localhost:8081/url\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(urlRequest)\n    }).then(res => res.json()).then(newSavedUrl => {\n      setSavedUrls(prevUrls => [...prevUrls, newSavedUrl]); // Add to state\n      setNewUrl(\"\"); // Clear input\n    }).catch(error => {\n      console.error(\"Failed to add URL:\", error);\n    });\n  };\n  const handleEditSelected = () => {\n    const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n      const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText; // Get updated text from the contenteditable element\n      return {\n        ...url,\n        url: updatedUrl // Set the updated URL\n      };\n    });\n    if (updatedUrls.length === 0) {\n      alert(\"Please select at least one URL to edit.\");\n      return;\n    }\n\n    // Send the updated URLs to the backend for saving\n    fetch(\"http://localhost:8081/urls\", {\n      // Make sure this endpoint is correct for updating URLs\n      method: \"PUT\",\n      // PUT for updating\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedUrls) // Send the updated URLs\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"Updated URLs:\", responseData); // Log to check the response\n\n      // Update the local state with the new data from the backend\n      setSavedUrls(prevUrls => prevUrls.map(url => {\n        const updatedUrl = responseData.find(u => u.url_id === url.url_id);\n        return updatedUrl ? updatedUrl : url;\n      }));\n    }).catch(error => {\n      console.error(\"Error updating URLs:\", error);\n    });\n  };\n  const handleRescan = () => {\n    const selectedUrls = savedUrls.filter(url => url.selected);\n    if (selectedUrls.length === 0) {\n      alert(\"Please select at least one URL to rescan.\");\n      return;\n    }\n\n    // Collect selected URL IDs (ensure they are Long/Number)\n    const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n    // Send the selected URLs to the backend for rescanning\n    fetch(\"http://localhost:8081/rescan\", {\n      // Correct endpoint\n      method: \"PUT\",\n      // PUT for rescanning\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedUrlIds) // Send the array directly\n    }).then(response => response.json()).then(updatedUrls => {\n      console.log(\"Updated URLs:\", updatedUrls); // Log to inspect the response structure\n\n      // Ensure updatedUrls is an array before trying to use .find()\n      if (Array.isArray(updatedUrls)) {\n        setSavedUrls(prevUrls => prevUrls.map(url => {\n          const updatedUrl = updatedUrls.find(u => u.url_id === url.url_id);\n          return updatedUrl ? updatedUrl : url;\n        }));\n      } else {\n        console.error(\"Unexpected response format:\", updatedUrls);\n      }\n    }).catch(error => console.error(\"Error rescanning URL:\", error));\n  };\n  const analyzeUrlAndUpdateState = url => {\n    fetch(`http://localhost:8081/url/rescan`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(url)\n    }).then(response => response.json()).then(updatedUrl => {\n      setSavedUrls(prevUrls => prevUrls.map(item => item.url_id === updatedUrl.url_id ? updatedUrl : item));\n    }).catch(error => console.error(\"Error analyzing URL:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/Headerlogo.png\",\n        alt: \"Commerce Bank Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Commerce Bank: URL Checking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Saved URLs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a new URL\",\n      value: newUrl,\n      onChange: e => setNewUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleAddUrl,\n      children: \"Add URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: handleEditSelected,\n      children: \"Edit Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rescan-btn\",\n      onClick: handleRescan,\n      children: \"Rescan Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-btn\",\n      onClick: handleDelete,\n      style: {\n        backgroundColor: \"red\",\n        color: \"white\",\n        marginLeft: \"10px\"\n      },\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Certificates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Response Headers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSL Protocol/Cipher Used\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: savedUrls.map(savedUrl => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: savedUrl.selected || false // Ensure `selected` property is used to check if it's selected\n              ,\n              onChange: () => handleCheckboxChange(savedUrl.url_id) // Use `url_id` to uniquely identify the URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.url,\n            contentEditable: true,\n            children: savedUrl.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.ssl || \"N/A\",\n            children: savedUrl.ssl || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resCode || \"N/A\",\n            children: savedUrl.resCode || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.resHead || \"N/A\",\n            children: savedUrl.resHead || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            \"data-full-text\": savedUrl.sslPro || \"N/A\",\n            children: savedUrl.sslPro || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, savedUrl.url_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"XGbZ4FGCL6gRNiqH/3od72XEIaA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Dashboard","setIsLoggedIn","_s","navigate","savedUrls","setSavedUrls","newUrl","setNewUrl","userId","localStorage","getItem","fetch","then","response","json","data","console","log","catch","error","handleLogout","setItem","handleCheckboxChange","id","prevUrls","map","url","url_id","selected","handleDelete","selectedIds","filter","method","headers","body","JSON","stringify","ids","handleAddUrl","trim","urlRequest","res","newSavedUrl","handleEditSelected","updatedUrls","updatedUrl","document","getElementById","innerText","length","alert","responseData","find","u","handleRescan","selectedUrls","selectedUrlIds","Array","isArray","analyzeUrlAndUpdateState","item","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","style","backgroundColor","color","marginLeft","savedUrl","checked","contentEditable","ssl","resCode","resHead","sslPro","_c","$RefreshReg$"],"sources":["C:/Users/Bradl/Downloads/SE-Project-main/SE-Project-main/Project/Frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst Dashboard = ({ setIsLoggedIn }) => {\n    const navigate = useNavigate();\n    const [savedUrls, setSavedUrls] = useState([]);\n    const [newUrl, setNewUrl] = useState(\"\");\n\n    useEffect(() => {\n        const userId = localStorage.getItem(\"userId\");\n        fetch(`http://localhost:8081/url/${userId}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Fetched URLs:\", data); // Log the fetched URLs\n                setSavedUrls(data);\n            })\n            .catch((error) => console.error(\"Error fetching URLs:\", error));\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        setIsLoggedIn(false);\n        navigate(\"/login\"); // Redirect to login page\n    };\n\n    const handleCheckboxChange = (id) => {\n        setSavedUrls((prevUrls) =>\n            prevUrls.map((url) =>\n                url.url_id === id ? { ...url, selected: !url.selected } : url // Use `url.url_id` for matching\n            )\n        );\n    };\n\n    const handleDelete = () => {\n        const selectedIds = savedUrls.filter(url => url.selected).map(url => url.url_id); // Use `url_id`\n\n        // Optional: Send delete requests to the backend if you have a DELETE endpoint\n        setSavedUrls((prevUrls) => prevUrls.filter((url) => !url.selected));\n\n        // Send a request to delete the selected URLs if needed\n        fetch(\"http://localhost:8081/url/delete\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ ids: selectedIds }),\n        })\n            .then((response) => response.json())\n            .then(() => {\n                console.log(\"URLs deleted\");\n            })\n            .catch((error) => {\n                console.error(\"Failed to delete URLs:\", error);\n            });\n    };\n\n    const handleAddUrl = () => {\n        if (newUrl.trim() === \"\") return;\n\n        const userId = localStorage.getItem(\"userId\");\n\n        const urlRequest = {\n            url: newUrl,\n            userId: userId,\n        };\n\n        fetch(\"http://localhost:8081/url\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(urlRequest),\n        })\n            .then((res) => res.json())\n            .then((newSavedUrl) => {\n                setSavedUrls((prevUrls) => [...prevUrls, newSavedUrl]); // Add to state\n                setNewUrl(\"\"); // Clear input\n            })\n            .catch((error) => {\n                console.error(\"Failed to add URL:\", error);\n            });\n    };\n    const handleEditSelected = () => {\n        const updatedUrls = savedUrls.filter(url => url.selected).map(url => {\n            const updatedUrl = document.getElementById(`url-${url.url_id}`).innerText;  // Get updated text from the contenteditable element\n            return {\n                ...url,\n                url: updatedUrl,  // Set the updated URL\n            };\n        });\n\n        if (updatedUrls.length === 0) {\n            alert(\"Please select at least one URL to edit.\");\n            return;\n        }\n\n        // Send the updated URLs to the backend for saving\n        fetch(\"http://localhost:8081/urls\", {  // Make sure this endpoint is correct for updating URLs\n            method: \"PUT\",  // PUT for updating\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updatedUrls),  // Send the updated URLs\n        })\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(\"Updated URLs:\", responseData);  // Log to check the response\n\n                // Update the local state with the new data from the backend\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((url) => {\n                        const updatedUrl = responseData.find((u) => u.url_id === url.url_id);\n                        return updatedUrl ? updatedUrl : url;\n                    })\n                );\n            })\n            .catch((error) => {\n                console.error(\"Error updating URLs:\", error);\n            });\n    };\n    const handleRescan = () => {\n        const selectedUrls = savedUrls.filter(url => url.selected);\n\n        if (selectedUrls.length === 0) {\n            alert(\"Please select at least one URL to rescan.\");\n            return;\n        }\n\n        // Collect selected URL IDs (ensure they are Long/Number)\n        const selectedUrlIds = selectedUrls.map(url => url.url_id);\n\n        // Send the selected URLs to the backend for rescanning\n        fetch(\"http://localhost:8081/rescan\", {  // Correct endpoint\n            method: \"PUT\",  // PUT for rescanning\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(selectedUrlIds),  // Send the array directly\n        })\n            .then((response) => response.json())\n            .then((updatedUrls) => {\n                console.log(\"Updated URLs:\", updatedUrls);  // Log to inspect the response structure\n\n                // Ensure updatedUrls is an array before trying to use .find()\n                if (Array.isArray(updatedUrls)) {\n                    setSavedUrls((prevUrls) =>\n                        prevUrls.map((url) => {\n                            const updatedUrl = updatedUrls.find((u) => u.url_id === url.url_id);\n                            return updatedUrl ? updatedUrl : url;\n                        })\n                    );\n                } else {\n                    console.error(\"Unexpected response format:\", updatedUrls);\n                }\n            })\n            .catch((error) => console.error(\"Error rescanning URL:\", error));\n    };\n\n    const analyzeUrlAndUpdateState = (url) => {\n        fetch(`http://localhost:8081/url/rescan`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(url),\n        })\n            .then((response) => response.json())\n            .then((updatedUrl) => {\n                setSavedUrls((prevUrls) =>\n                    prevUrls.map((item) => (item.url_id === updatedUrl.url_id ? updatedUrl : item))\n                );\n            })\n            .catch((error) => console.error(\"Error analyzing URL:\", error));\n    };\n\n    return (\n        <div className=\"dashboard\">\n            <header className=\"header\">\n                <img src=\"/images/Headerlogo.png\" alt=\"Commerce Bank Logo\" className=\"logo\" />\n                <h1>Commerce Bank: URL Checking System</h1>\n            </header>\n\n            <div className=\"logout-container\">\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n            </div>\n\n            <h2>Your Saved URLs</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter a new URL\"\n                value={newUrl}\n                onChange={(e) => setNewUrl(e.target.value)}\n            />\n            <button className=\"rescan-btn\" onClick={handleAddUrl}>Add URL</button>\n            <button className=\"edit-btn\" onClick={handleEditSelected}>Edit Selected</button>\n            <button className=\"rescan-btn\" onClick={handleRescan}>Rescan Selected</button>\n            <button className=\"delete-btn\" onClick={handleDelete} style={{ backgroundColor: \"red\", color: \"white\", marginLeft: \"10px\" }}>\n                Delete Selected\n            </button>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Select</th>\n                        <th>URL</th>\n                        <th>SSL Certificates</th>\n                        <th>Response Code</th>\n                        <th>Response Headers</th>\n                        <th>SSL Protocol/Cipher Used</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {savedUrls.map((savedUrl) => (\n                        <tr key={savedUrl.url_id}>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={savedUrl.selected || false} // Ensure `selected` property is used to check if it's selected\n                                    onChange={() => handleCheckboxChange(savedUrl.url_id)} // Use `url_id` to uniquely identify the URL\n                                />\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.url} contentEditable>\n                                {savedUrl.url}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.ssl || \"N/A\"}>\n                                {savedUrl.ssl || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resCode || \"N/A\"}>\n                                {savedUrl.resCode || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.resHead || \"N/A\"}>\n                                {savedUrl.resHead || \"N/A\"}\n                            </td>\n                            <td className=\"table-cell\" data-full-text={savedUrl.sslPro || \"N/A\"}>\n                                {savedUrl.sslPro || \"N/A\"}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}